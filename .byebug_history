continue
@trabalhos
continue
exit
clear all
@trabalhos
continue
@trabalhos
continue
self.fim_antigo
exit
self.fim_exce
continue
(func.salario_cents.to_f/22000)*trab.horas_extras*trab.valor_he
trab.horas_extras.class
trab.horas_extras.clas
soma.class
trab.valor_he
trab.horas_extras
func.salario_cents.to_f/22000
func.salario_cents/22000
func.salario_cents
soma
continue
soma
continue
soma
continue
soma
continue
soma
continue
soma
continue
soma
continue
trabalhos_periodo
trab
soma
continue
soma
continue
soma
continue
soma
continue
soma
continue
trab
trab.valor_he
trab.valor.he
trab.horas_extras
func.salario_cents
soma
exit
trab.valor_he
trab.horas_extras
func.salario_cents/1111111
func.salario_cents/1111
func.salario_cents/220
func.salario_cents
func.salario.cents
trab
soma
continue
soma
exit
func.salario_cents
func.salario_centavos
func.salario
soma_cents
soma
continue
soma
trab
continue
trabalhos_periodo
func
exit
@trabalho.update(user_trabalho_params)
@trabalho = Trabalho.find(params[:id])
@trabalho.update(user_trabalho_params)
Trabalho.find(params[:id])
@trabalho
trabalho
user_trabalho_params
continue
exit
trabalhos.first.errors
trabalhos.first.save
trabalhos.first
trabalhos
exit
continue
self
continue
params
self.saida
saida
valor_he
self
continue
params
continue
self.status
exit
icon_sizes.map { |s| "#{s}x#{s}" }
icon_sizes
icon
continue
params
exit
params
exit
params
continue
Grupo.all
self.users.each { |func| func.grupos.each { |grupo| puts grupo.nome }}
self.users.each { |func| puts func.grupos }
func.grupos
self.users.each { |func| puts func.nome_completo }
self.users
func
continue
self
exit
data
data = Date.strptime(params[:inicio], "%d/%m/%Y")
Date.strptime(params[:inicio], "%d/%m/%Y")
Date.new(params[:inicio])
params[:inicio]
params
continue
continue]
exit
params
exit
grupo_params
exit
params[:grupo][:user_ids]
params
grupo_params
exit
grupo_params
exit
grupo_params
params
exit
continue
exit
params
continue
params
continue
date_array
params[:fim].each_pair { |k,v| date_array << v}
date.hash.each_pair { |k,v| date_array << v}
date_array = []
params[:fim].each_pair { |k,v| puts k + v }
params[:fim].each_pair { |k| puts k }
params[:fim].each_pair
params[:fim].first
continue
params[:fim]
params[:inicio]
params[:de]
exit
params[:periodo]["de(3i)"]
params[:periodo][:de(3i)]
params[:periodo][:de(3i)
params[:periodo]
params
continue
(fim-inicio).to_i
inicio
fim
continuefim
continue
self
continue
params
continue
exit
params
exit
"0"==false
"0".false?
params[:trabalho][:sem_he]
params
exit
params[:trabalho][:sem_he]
params
exit
params[:trabalho][:sem_he]
params[:trabalho][:veiculo]
params[:trabalho]
params
exit
params
prams
exit
params
continue
@trabalho.errors.full_messages
@trabalho.error
@trabalho.errors.to_s
@trabalho.errors[0]
@trabalho.errors
@trabalho.erros
